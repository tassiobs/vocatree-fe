{"ast":null,"code":"var _jsxFileName = \"/Users/tassiobs/Documents/vocatree-fe/src/components/VocabTree.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CategoryNode } from './CategoryNode';\nimport { AddItemInput } from './AddItemInput';\nimport { AITreeGenerator } from './AITreeGenerator';\nimport { apiClient } from '../services/api';\nimport { buildTree, updateTreeItem, removeTreeItem, moveTreeItem, findTreeItem, getExpandedIds } from '../utils/treeUtils';\nimport { Loader2, Sparkles, Tag } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VocabTree = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showAIGenerator, setShowAIGenerator] = useState(false);\n  const [showAddCategory, setShowAddCategory] = useState(false);\n\n  // Load initial data\n  useEffect(() => {\n    loadCategories();\n  }, []);\n  const loadCategories = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // First try to get categories\n      let categoriesData;\n      try {\n        categoriesData = await apiClient.getCategories();\n        console.log('Categories response:', categoriesData);\n      } catch (categoryErr) {\n        console.error('Categories endpoint error:', categoryErr);\n        // If categories endpoint doesn't exist, fall back to loading all cards without categories\n        const allCards = await apiClient.getCardsHierarchy();\n        const treeData = buildTree(allCards);\n\n        // Create a default \"All Items\" category\n        setCategories([{\n          id: 0,\n          name: 'All Items',\n          isExpanded: true,\n          children: treeData\n        }]);\n        setIsLoading(false);\n        return;\n      }\n      const categoriesWithChildren = await Promise.all(categoriesData.map(async category => {\n        try {\n          const cards = await apiClient.getCardsHierarchy(category.id);\n          const treeData = buildTree(cards);\n          return {\n            id: category.id,\n            name: category.name,\n            isExpanded: false,\n            children: treeData\n          };\n        } catch (err) {\n          console.error(`Error loading cards for category ${category.id}:`, err);\n          return {\n            id: category.id,\n            name: category.name,\n            isExpanded: false,\n            children: []\n          };\n        }\n      }));\n      setCategories(categoriesWithChildren);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error loading categories:', err);\n      setError(`Failed to load categories: ${err.message || ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Unknown error'}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleToggle = useCallback(id => {\n    setCategories(prevCategories => prevCategories.map(category => {\n      var _findTreeItem;\n      if (category.id === id) {\n        return {\n          ...category,\n          isExpanded: !category.isExpanded\n        };\n      }\n      return {\n        ...category,\n        children: updateTreeItem(category.children, id, {\n          isExpanded: !((_findTreeItem = findTreeItem(category.children, id)) !== null && _findTreeItem !== void 0 && _findTreeItem.isExpanded)\n        })\n      };\n    }));\n  }, []);\n  const handleRename = useCallback(async (id, newName) => {\n    try {\n      await apiClient.updateCard(id, {\n        name: newName\n      });\n      setCategories(prevCategories => prevCategories.map(category => ({\n        ...category,\n        children: updateTreeItem(category.children, id, {\n          name: newName\n        })\n      })));\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Failed to rename item');\n      console.error('Error renaming item:', err);\n    }\n  }, []);\n  const handleDelete = useCallback(async id => {\n    try {\n      await apiClient.deleteCard(id);\n      setCategories(prevCategories => prevCategories.map(category => ({\n        ...category,\n        children: removeTreeItem(category.children, id)\n      })));\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || 'Failed to delete item');\n      console.error('Error deleting item:', err);\n    }\n  }, []);\n  const handleCategoryRefresh = useCallback(async (categoryId, expandFolderId) => {\n    try {\n      setCategories(prevCategories => {\n        // Find the category to get current expanded state\n        const currentCategory = prevCategories.find(cat => cat.id === categoryId);\n\n        // Get currently expanded IDs\n        const expandedIds = currentCategory ? getExpandedIds(currentCategory.children) : new Set();\n\n        // If we have a folder to expand, add it to the set\n        if (expandFolderId) {\n          expandedIds.add(expandFolderId);\n        }\n        return prevCategories; // Return unchanged for now, will update after fetch\n      });\n      const updatedCards = await apiClient.getCardsHierarchy(categoryId);\n      setCategories(prevCategories => {\n        const currentCategory = prevCategories.find(cat => cat.id === categoryId);\n        const expandedIds = currentCategory ? getExpandedIds(currentCategory.children) : new Set();\n        if (expandFolderId) {\n          expandedIds.add(expandFolderId);\n        }\n        const updatedTreeData = buildTree(updatedCards, expandedIds);\n        return prevCategories.map(category => {\n          if (category.id === categoryId) {\n            return {\n              ...category,\n              children: updatedTreeData,\n              isExpanded: true // Auto-expand when adding children\n            };\n          }\n          return category;\n        });\n      });\n    } catch (err) {\n      console.error('Error refreshing category:', err);\n    }\n  }, []);\n  const handleAddCategory = async name => {\n    try {\n      const newCategory = await apiClient.createCategory(name);\n      const newCategoryItem = {\n        id: newCategory.id,\n        name: newCategory.name,\n        isExpanded: false,\n        children: []\n      };\n      setCategories(prevCategories => [...prevCategories, newCategoryItem]);\n      setShowAddCategory(false);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error adding category:', err);\n      setError(`Failed to add category: ${err.message || ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.detail) || 'Unknown error'}`);\n    }\n  };\n  const handleMove = useCallback(async (itemId, newParentId) => {\n    try {\n      await apiClient.moveCard(itemId, newParentId);\n      setCategories(prevCategories => prevCategories.map(category => ({\n        ...category,\n        children: moveTreeItem(category.children, itemId, newParentId)\n      })));\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.detail) || 'Failed to move item');\n      console.error('Error moving item:', err);\n    }\n  }, []);\n  const handleAIGeneratorSuccess = () => {\n    loadCategories(); // Reload categories after AI generation\n  };\n\n  // Note: flattenTree utility is available for future drag and drop enhancements\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(Loader2, {\n          className: \"h-6 w-6 animate-spin text-primary-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600\",\n          children: \"Loading vocabulary tree...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rounded-md bg-red-50 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-red-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadCategories,\n        className: \"mt-2 text-sm text-red-600 hover:text-red-800 underline\",\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900\",\n        children: \"Vocabulary Tree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAIGenerator(true),\n          className: \"flex items-center space-x-1 px-3 py-2 text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 rounded-md transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(Sparkles, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Generate with AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddCategory(true),\n          className: \"flex items-center space-x-1 px-3 py-2 text-sm font-medium text-white bg-green-600 hover:bg-green-700 rounded-md transition-colors\",\n          children: [/*#__PURE__*/_jsxDEV(Tag, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), showAddCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-gray-200 rounded-lg p-4 bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(AddItemInput, {\n        parentId: null,\n        type: \"folder\",\n        onSubmit: handleAddCategory,\n        onCancel: () => setShowAddCategory(false),\n        placeholder: \"Add category...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: categories.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center py-12 text-gray-500 border border-gray-200 rounded-lg bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(Tag, {\n          className: \"h-12 w-12 mb-4 opacity-50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg font-medium mb-2\",\n          children: \"No categories yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm mb-4\",\n          children: \"Start by adding your first category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAddCategory(true),\n          className: \"px-4 py-2 text-sm font-medium text-white bg-green-600 hover:bg-green-700 rounded-md\",\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this) : categories.map(category => /*#__PURE__*/_jsxDEV(CategoryNode, {\n        category: category,\n        onToggle: handleToggle,\n        onRename: handleRename,\n        onDelete: handleDelete,\n        onAddChild: () => {} // Not used anymore\n        ,\n        onMove: handleMove,\n        onCategoryUpdate: loadCategories,\n        onCategoryRefresh: handleCategoryRefresh\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), showAIGenerator && /*#__PURE__*/_jsxDEV(AITreeGenerator, {\n      onClose: () => setShowAIGenerator(false),\n      onSuccess: handleAIGeneratorSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabTree, \"UHuiQ2ZOZniQyW0dxr69B1U60uQ=\");\n_c = VocabTree;\nvar _c;\n$RefreshReg$(_c, \"VocabTree\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","CategoryNode","AddItemInput","AITreeGenerator","apiClient","buildTree","updateTreeItem","removeTreeItem","moveTreeItem","findTreeItem","getExpandedIds","Loader2","Sparkles","Tag","jsxDEV","_jsxDEV","VocabTree","_s","categories","setCategories","isLoading","setIsLoading","error","setError","showAIGenerator","setShowAIGenerator","showAddCategory","setShowAddCategory","loadCategories","categoriesData","getCategories","console","log","categoryErr","allCards","getCardsHierarchy","treeData","id","name","isExpanded","children","categoriesWithChildren","Promise","all","map","category","cards","err","_err$response","_err$response$data","message","response","data","detail","handleToggle","prevCategories","_findTreeItem","handleRename","newName","updateCard","_err$response2","_err$response2$data","handleDelete","deleteCard","_err$response3","_err$response3$data","handleCategoryRefresh","categoryId","expandFolderId","currentCategory","find","cat","expandedIds","Set","add","updatedCards","updatedTreeData","handleAddCategory","newCategory","createCategory","newCategoryItem","_err$response4","_err$response4$data","handleMove","itemId","newParentId","moveCard","_err$response5","_err$response5$data","handleAIGeneratorSuccess","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","parentId","type","onSubmit","onCancel","placeholder","length","onToggle","onRename","onDelete","onAddChild","onMove","onCategoryUpdate","onCategoryRefresh","onClose","onSuccess","_c","$RefreshReg$"],"sources":["/Users/tassiobs/Documents/vocatree-fe/src/components/VocabTree.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { CategoryItem } from '../types';\nimport { CategoryNode } from './CategoryNode';\nimport { AddItemInput } from './AddItemInput';\nimport { AITreeGenerator } from './AITreeGenerator';\nimport { apiClient } from '../services/api';\nimport { buildTree, updateTreeItem, removeTreeItem, moveTreeItem, findTreeItem, getExpandedIds } from '../utils/treeUtils';\nimport { Loader2, Sparkles, Tag } from 'lucide-react';\n\nexport const VocabTree: React.FC = () => {\n  const [categories, setCategories] = useState<CategoryItem[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showAIGenerator, setShowAIGenerator] = useState(false);\n  const [showAddCategory, setShowAddCategory] = useState(false);\n\n  // Load initial data\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // First try to get categories\n      let categoriesData;\n      try {\n        categoriesData = await apiClient.getCategories();\n        console.log('Categories response:', categoriesData);\n      } catch (categoryErr: any) {\n        console.error('Categories endpoint error:', categoryErr);\n        // If categories endpoint doesn't exist, fall back to loading all cards without categories\n        const allCards = await apiClient.getCardsHierarchy();\n        const treeData = buildTree(allCards);\n        \n        // Create a default \"All Items\" category\n        setCategories([{\n          id: 0,\n          name: 'All Items',\n          isExpanded: true,\n          children: treeData,\n        }]);\n        setIsLoading(false);\n        return;\n      }\n      \n      const categoriesWithChildren = await Promise.all(\n        categoriesData.map(async (category) => {\n          try {\n            const cards = await apiClient.getCardsHierarchy(category.id);\n            const treeData = buildTree(cards);\n            return {\n              id: category.id,\n              name: category.name,\n              isExpanded: false,\n              children: treeData,\n            };\n          } catch (err: any) {\n            console.error(`Error loading cards for category ${category.id}:`, err);\n            return {\n              id: category.id,\n              name: category.name,\n              isExpanded: false,\n              children: [],\n            };\n          }\n        })\n      );\n      setCategories(categoriesWithChildren);\n    } catch (err: any) {\n      console.error('Error loading categories:', err);\n      setError(`Failed to load categories: ${err.message || err.response?.data?.detail || 'Unknown error'}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleToggle = useCallback((id: number) => {\n    setCategories(prevCategories => \n      prevCategories.map(category => {\n        if (category.id === id) {\n          return { ...category, isExpanded: !category.isExpanded };\n        }\n        return {\n          ...category,\n          children: updateTreeItem(category.children, id, { \n            isExpanded: !findTreeItem(category.children, id)?.isExpanded \n          })\n        };\n      })\n    );\n  }, []);\n\n  const handleRename = useCallback(async (id: number, newName: string) => {\n    try {\n      await apiClient.updateCard(id, { name: newName });\n      setCategories(prevCategories => \n        prevCategories.map(category => ({\n          ...category,\n          children: updateTreeItem(category.children, id, { name: newName })\n        }))\n      );\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Failed to rename item');\n      console.error('Error renaming item:', err);\n    }\n  }, []);\n\n  const handleDelete = useCallback(async (id: number) => {\n    try {\n      await apiClient.deleteCard(id);\n      setCategories(prevCategories => \n        prevCategories.map(category => ({\n          ...category,\n          children: removeTreeItem(category.children, id)\n        }))\n      );\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Failed to delete item');\n      console.error('Error deleting item:', err);\n    }\n  }, []);\n\n  const handleCategoryRefresh = useCallback(async (categoryId: number, expandFolderId?: number) => {\n    try {\n      setCategories(prevCategories => {\n        // Find the category to get current expanded state\n        const currentCategory = prevCategories.find(cat => cat.id === categoryId);\n        \n        // Get currently expanded IDs\n        const expandedIds = currentCategory ? getExpandedIds(currentCategory.children) : new Set<number>();\n        \n        // If we have a folder to expand, add it to the set\n        if (expandFolderId) {\n          expandedIds.add(expandFolderId);\n        }\n        \n        return prevCategories; // Return unchanged for now, will update after fetch\n      });\n      \n      const updatedCards = await apiClient.getCardsHierarchy(categoryId);\n      \n      setCategories(prevCategories => {\n        const currentCategory = prevCategories.find(cat => cat.id === categoryId);\n        const expandedIds = currentCategory ? getExpandedIds(currentCategory.children) : new Set<number>();\n        \n        if (expandFolderId) {\n          expandedIds.add(expandFolderId);\n        }\n        \n        const updatedTreeData = buildTree(updatedCards, expandedIds);\n        \n        return prevCategories.map(category => {\n          if (category.id === categoryId) {\n            return {\n              ...category,\n              children: updatedTreeData,\n              isExpanded: true, // Auto-expand when adding children\n            };\n          }\n          return category;\n        });\n      });\n    } catch (err: any) {\n      console.error('Error refreshing category:', err);\n    }\n  }, []);\n\n  const handleAddCategory = async (name: string) => {\n    try {\n      const newCategory = await apiClient.createCategory(name);\n      const newCategoryItem: CategoryItem = {\n        id: newCategory.id,\n        name: newCategory.name,\n        isExpanded: false,\n        children: [],\n      };\n\n      setCategories(prevCategories => [...prevCategories, newCategoryItem]);\n      setShowAddCategory(false);\n    } catch (err: any) {\n      console.error('Error adding category:', err);\n      setError(`Failed to add category: ${err.message || err.response?.data?.detail || 'Unknown error'}`);\n    }\n  };\n\n  const handleMove = useCallback(async (itemId: number, newParentId: number | null) => {\n    try {\n      await apiClient.moveCard(itemId, newParentId);\n      setCategories(prevCategories => \n        prevCategories.map(category => ({\n          ...category,\n          children: moveTreeItem(category.children, itemId, newParentId)\n        }))\n      );\n    } catch (err: any) {\n      setError(err.response?.data?.detail || 'Failed to move item');\n      console.error('Error moving item:', err);\n    }\n  }, []);\n\n\n\n  const handleAIGeneratorSuccess = () => {\n    loadCategories(); // Reload categories after AI generation\n  };\n\n  // Note: flattenTree utility is available for future drag and drop enhancements\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"flex items-center space-x-2\">\n          <Loader2 className=\"h-6 w-6 animate-spin text-primary-600\" />\n          <span className=\"text-gray-600\">Loading vocabulary tree...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"rounded-md bg-red-50 p-4\">\n        <div className=\"text-sm text-red-700\">{error}</div>\n        <button\n          onClick={loadCategories}\n          className=\"mt-2 text-sm text-red-600 hover:text-red-800 underline\"\n        >\n          Try again\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Vocabulary Tree</h1>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setShowAIGenerator(true)}\n            className=\"flex items-center space-x-1 px-3 py-2 text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 rounded-md transition-colors\"\n          >\n            <Sparkles className=\"h-4 w-4\" />\n            <span>Generate with AI</span>\n          </button>\n          <button\n            onClick={() => setShowAddCategory(true)}\n            className=\"flex items-center space-x-1 px-3 py-2 text-sm font-medium text-white bg-green-600 hover:bg-green-700 rounded-md transition-colors\"\n          >\n            <Tag className=\"h-4 w-4\" />\n            <span>Add Category</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Add category input */}\n      {showAddCategory && (\n        <div className=\"border border-gray-200 rounded-lg p-4 bg-gray-50\">\n          <AddItemInput\n            parentId={null}\n            type=\"folder\"\n            onSubmit={handleAddCategory}\n            onCancel={() => setShowAddCategory(false)}\n            placeholder=\"Add category...\"\n          />\n        </div>\n      )}\n\n      {/* Categories */}\n      <div className=\"space-y-4\">\n        {categories.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center py-12 text-gray-500 border border-gray-200 rounded-lg bg-white\">\n            <Tag className=\"h-12 w-12 mb-4 opacity-50\" />\n            <p className=\"text-lg font-medium mb-2\">No categories yet</p>\n            <p className=\"text-sm mb-4\">Start by adding your first category</p>\n            <button\n              onClick={() => setShowAddCategory(true)}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-green-600 hover:bg-green-700 rounded-md\"\n            >\n              Add Category\n            </button>\n          </div>\n        ) : (\n          categories.map((category) => (\n            <CategoryNode\n              key={category.id}\n              category={category}\n              onToggle={handleToggle}\n              onRename={handleRename}\n              onDelete={handleDelete}\n              onAddChild={() => {}} // Not used anymore\n              onMove={handleMove}\n              onCategoryUpdate={loadCategories}\n              onCategoryRefresh={handleCategoryRefresh}\n            />\n          ))\n        )}\n      </div>\n\n      {/* AI Tree Generator Modal */}\n      {showAIGenerator && (\n        <AITreeGenerator\n          onClose={() => setShowAIGenerator(false)}\n          onSuccess={handleAIGeneratorSuccess}\n        />\n      )}\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}