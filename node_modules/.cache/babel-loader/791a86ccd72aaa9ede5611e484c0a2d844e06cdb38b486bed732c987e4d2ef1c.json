{"ast":null,"code":"import { apiClient } from '../services/api';\n\n/**\n * Check if a tree item has children (cards or folders)\n */\nexport const hasChildren = item => {\n  return item.children && item.children.length > 0;\n};\n\n/**\n * Get the count of children for a tree item\n */\nexport const getChildrenCount = item => {\n  return item.children ? item.children.length : 0;\n};\n\n/**\n * Handle conditional delete for a tree item\n * Shows appropriate confirmation message based on whether the item has children\n */\nexport const handleConditionalDelete = async (item, onSuccess, onError) => {\n  const hasChildItems = hasChildren(item);\n  const childrenCount = getChildrenCount(item);\n  let confirmMessage;\n  if (hasChildItems) {\n    confirmMessage = `This folder contains ${childrenCount} other card${childrenCount === 1 ? '' : 's'} or folder${childrenCount === 1 ? '' : 's'}. Deleting it will also delete all items inside. Do you want to continue?`;\n  } else {\n    confirmMessage = `Are you sure you want to delete this ${item.is_folder ? 'folder' : 'card'}?`;\n  }\n  const confirmed = window.confirm(confirmMessage);\n  if (!confirmed) {\n    return;\n  }\n  try {\n    if (hasChildItems) {\n      await apiClient.deleteCardBulk(item.id);\n    } else {\n      await apiClient.deleteCard(item.id);\n    }\n    onSuccess();\n  } catch (error) {\n    console.error('Error deleting item:', error);\n    if (onError) {\n      onError(error);\n    } else {\n      alert('Failed to delete item. Please try again.');\n    }\n  }\n};","map":{"version":3,"names":["apiClient","hasChildren","item","children","length","getChildrenCount","handleConditionalDelete","onSuccess","onError","hasChildItems","childrenCount","confirmMessage","is_folder","confirmed","window","confirm","deleteCardBulk","id","deleteCard","error","console","alert"],"sources":["/Users/tassiobs/Documents/vocatree-fe/src/utils/deleteUtils.ts"],"sourcesContent":["import { TreeItem } from '../types';\nimport { apiClient } from '../services/api';\n\n/**\n * Check if a tree item has children (cards or folders)\n */\nexport const hasChildren = (item: TreeItem): boolean => {\n  return item.children && item.children.length > 0;\n};\n\n/**\n * Get the count of children for a tree item\n */\nexport const getChildrenCount = (item: TreeItem): number => {\n  return item.children ? item.children.length : 0;\n};\n\n/**\n * Handle conditional delete for a tree item\n * Shows appropriate confirmation message based on whether the item has children\n */\nexport const handleConditionalDelete = async (\n  item: TreeItem,\n  onSuccess: () => void,\n  onError?: (error: any) => void\n): Promise<void> => {\n  const hasChildItems = hasChildren(item);\n  const childrenCount = getChildrenCount(item);\n  \n  let confirmMessage: string;\n  \n  if (hasChildItems) {\n    confirmMessage = `This folder contains ${childrenCount} other card${childrenCount === 1 ? '' : 's'} or folder${childrenCount === 1 ? '' : 's'}. Deleting it will also delete all items inside. Do you want to continue?`;\n  } else {\n    confirmMessage = `Are you sure you want to delete this ${item.is_folder ? 'folder' : 'card'}?`;\n  }\n\n  const confirmed = window.confirm(confirmMessage);\n  \n  if (!confirmed) {\n    return;\n  }\n\n  try {\n    if (hasChildItems) {\n      await apiClient.deleteCardBulk(item.id);\n    } else {\n      await apiClient.deleteCard(item.id);\n    }\n    onSuccess();\n  } catch (error) {\n    console.error('Error deleting item:', error);\n    if (onError) {\n      onError(error);\n    } else {\n      alert('Failed to delete item. Please try again.');\n    }\n  }\n};\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,iBAAiB;;AAE3C;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAc,IAAc;EACtD,OAAOA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC;AAClD,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,gBAAgB,GAAIH,IAAc,IAAa;EAC1D,OAAOA,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACC,QAAQ,CAACC,MAAM,GAAG,CAAC;AACjD,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAME,uBAAuB,GAAG,MAAAA,CACrCJ,IAAc,EACdK,SAAqB,EACrBC,OAA8B,KACZ;EAClB,MAAMC,aAAa,GAAGR,WAAW,CAACC,IAAI,CAAC;EACvC,MAAMQ,aAAa,GAAGL,gBAAgB,CAACH,IAAI,CAAC;EAE5C,IAAIS,cAAsB;EAE1B,IAAIF,aAAa,EAAE;IACjBE,cAAc,GAAG,wBAAwBD,aAAa,cAAcA,aAAa,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,aAAaA,aAAa,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,2EAA2E;EAC1N,CAAC,MAAM;IACLC,cAAc,GAAG,wCAAwCT,IAAI,CAACU,SAAS,GAAG,QAAQ,GAAG,MAAM,GAAG;EAChG;EAEA,MAAMC,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACJ,cAAc,CAAC;EAEhD,IAAI,CAACE,SAAS,EAAE;IACd;EACF;EAEA,IAAI;IACF,IAAIJ,aAAa,EAAE;MACjB,MAAMT,SAAS,CAACgB,cAAc,CAACd,IAAI,CAACe,EAAE,CAAC;IACzC,CAAC,MAAM;MACL,MAAMjB,SAAS,CAACkB,UAAU,CAAChB,IAAI,CAACe,EAAE,CAAC;IACrC;IACAV,SAAS,CAAC,CAAC;EACb,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,IAAIX,OAAO,EAAE;MACXA,OAAO,CAACW,KAAK,CAAC;IAChB,CAAC,MAAM;MACLE,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}